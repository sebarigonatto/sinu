@model SINU.ViewModels.ConsultaPorConvocatoria
@{
    ViewBag.Title = "Problemas de Inscriptos en Convocatoria elegida";
    //tiene 1 registro de la convocatoria elegida con los totales de los count de errores correspondientes
    // vInscriptosYRestriccionesCount InscriptosYConvocatoriasCount = (vInscriptosYRestriccionesCount)(ViewBag.InscriptosYConvocatoriasCount);
    //Layout = "~/Views/Shared/_Layout.cshtml";
}


<div>

    <!-- en esta linea estoy llamando al Index de ConsultaProgramadas
    con el id de la consulta que deseo se encuentre activa
    cuando armé el menú lateral de consultas.
            se debe cargar el ActivarId en el controller action que llama a esta view
            o en este archivo al ppio-->
    @Html.ActionLink("Atras", "Index", "CallConsulta", new { id = ViewBag.ActivarId }, new { @class = "btn btn-primary w-80  btn-dark" })


    <span style="float:right">
        @Html.ActionLink("VER Problemas de Titulos", "TotalesConvocatoriaTitulos", new { IdConvocatoria = Model.idConvocatoria }, new { @class = "btn btn-primary w-80  btn-dark" })
    </span>
</div>
<br />
<h2>
    @ViewBag.Title
</h2>
<p>
    <div class="alert alert-success text-dark" role="alert">DETALLES DE LA CONVOCATORIA SELECCIONADA  <span style="float:right">TOTAL INSC.: @(Model.restriccionesConvocatoria.Count() == 0 ? "0 ": Model.restriccionesConvocatoria[1].Total)</span></div>
</p>

<div>
    <p>ID de Convocatoria: <b>@Model.infoConvocatoria.IdConvocatoria</b></p>
    <p>Modalidad: <b>@Model.infoConvocatoria.Modalidad</b></p>
    <p>Inicio: <b>@Model.infoConvocatoria.FechaInicio.ToString("dd/MM/yyyy")</b></p>
    <p>Fin de Inscripción: <b>@Model.infoConvocatoria.FechaFinal.ToString("dd/MM/yyyy")</b></p>
    <p>Fin Proceso: <b>@(((DateTime)Model.infoConvocatoria.Fecha_Fin_Proceso).ToString("dd/MM/yyyy"))</b></p>

</div>
<!-- tabla con detalles de problemas sumarizados, tiene los count de cada problema-->

<table class="table table-filters table-bordered table-light table-hover " id="tablasRestricciones" style="width:100%">
    <thead class="thead-dark">
        <!-- fila con detalle de convocatoria-->
        <tr>
            <th>
                IMC
            </th>
            <th>
                ALTURA
            </th>
            <th>
                EDAD
            </th>
            <th>
                Estado Civil
            </th>
            <th>
                Total
            </th>
            <th width="29">
                Total_Subtotal_Agrupacion
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model.restriccionesConvocatoria)
        {
            <tr>
                <td style="background-color:@(item.IMC != "" ? "#ffffff" : "#fff6e3")">
                    <b>@item.IMC</b>
                </td>
                <td style="background-color:@(item.ALTURA != "" ? "#ffffff" : "#fff6e3")">
                    <b>@item.ALTURA</b>
                </td>
                <td style="background-color:@(item.EDAD != "" ? "#ffffff" : "#fff6e3")">
                    <b>@item.EDAD</b>
                </td>
                <td style="background-color:@(item.EstadoCivil != "" ? "#ffffff" : "#fff6e3")">
                    <b>@item.EstadoCivil</b>
                </td>
                <td style="background-color:@(item.Total != "" ? "#ffffff" : "#fff6e3")">
                    <b>@item.Total</b>
                </td>
                <td>
                    <b>@item.Total_Subtotal_Agrupacion</b>
                </td>
            </tr>
        }


    </tbody>
</table>
<hr />
<!-- GRILLA CON LOS DETALLES DE CADA INSCRIPTO Y SU PROBLEMA
    dar formato con datatables a esta grilla-->
<h3>Postulantes Inscriptos en la Convocatoria</h3>


@Html.TablaHelper(Model.tablaModel, "dark")

<div class="modal fade" id="MCheck" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Confirmación de Eliminación</h5>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 col-sm-12">
                        <input class="form-control" name="idPostulante" id="idpostu" hidden>

                        <div class="form-group">
                            <label>N° de Pre-Inscripción</label>
                            <label class="form-control" id="idinscripcion"></label>
                        </div>
                        <div class="form-group">
                            <label>Nombres</label>
                            <label class="form-control" id="nombre"></label>

                        </div>
                        <div class="form-group">
                            <label>Apellido</label>
                            <label class="form-control" id="apellido"></label>

                        </div>
                        <div class="form-group">
                            <label>Genero</label>
                            <label class="form-control" id="genero"></label>

                        </div>
                    </div>
                    <div class="col-md-6 col-sm-12">
                        <div class="form-group">
                            <label>Altura</label>
                            <label class="form-control" id="altura"></label>

                        </div>
                        <div class="form-group">
                            <label>IMC</label>
                            <label class="form-control" id="imc"></label>

                        </div>
                        <div class="form-group">
                            <label>Edad</label>
                            <label class="form-control" id="edad"></label>

                        </div>
                        <div class="form-group">
                            <label>Estado Civil</label>
                            <label class="form-control" id="estadocivil"></label>

                        </div>

                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a class="mr-1 btn btn-info d-inline " id="detallePostulante" href="">Datos del Postulante</a>

                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>

        </div>
    </div>
</div>



<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->

@section Scripts{
    <script type="text/javascript">
        $("#tablasRestricciones").DataTable({
            dom: "t",
            pageLength: 100
        });
        //https://stackoverflow.com/questions/32692618/how-to-export-all-rows-from-datatables-using-ajax
        function newexportaction(e, dt, button, config) {
            var self = this;
            var oldStart = dt.settings()[0]._iDisplayStart;
            dt.one('preXhr', function (e, s, data) {
                // Just this once, load all data from the server...
                data.start = 0;
                data.length = -1;
                dt.one('preDraw', function (e, settings) {
                    // Call the original action function
                    if (button[0].className.indexOf('buttons-copy') >= 0) {
                        $.fn.dataTable.ext.buttons.copyHtml5.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-excel') >= 0) {
                        $.fn.dataTable.ext.buttons.excelHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.excelFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-csv') >= 0) {
                        $.fn.dataTable.ext.buttons.csvHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.csvFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-pdf') >= 0) {
                        $.fn.dataTable.ext.buttons.pdfHtml5.available(dt, config) ?
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(self, e, dt, button, config) :
                            $.fn.dataTable.ext.buttons.pdfFlash.action.call(self, e, dt, button, config);
                    } else if (button[0].className.indexOf('buttons-print') >= 0) {
                        $.fn.dataTable.ext.buttons.print.action(e, dt, button, config);
                    }
                    dt.one('preXhr', function (e, s, data) {
                        // DataTables thinks the first item displayed is index 0, but we're not drawing that.
                        // Set the property to what it was before exporting.
                        settings._iDisplayStart = oldStart;
                        data.start = oldStart;
                    });
                    // Reload the grid with the original page. Otherwise, API functions like table.cell(this) don't work properly.
                    setTimeout(dt.ajax.reload, 0);
                    // Prevent rendering of the full data to the DOM
                    return false;
                });
            });
            // Requery the server with the new one-time export settings
            dt.ajax.reload();
        };

        $(":input[type='search']").on("keyup", async function () {
            sessionStorage.setItem("searchText", $(this).val());
        });

        //datatables ajax
        columns = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.tablaModel.Columnas, Newtonsoft.Json.Formatting.Indented));

        columns.push({ data: "Opciones", searchable: false, orderable: false, title: 'Opciones',className:'noPrint' });

        filtroInicial = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.tablaModel.filtrosIniciales, Newtonsoft.Json.Formatting.Indented));


        var input_filter_value;
        var input_filter_timeout = null;
        primerCarga = true;

         var table = $(`#tabla-${"@Model.tablaModel.TablaVista"}`).DataTable({
            "serverSide": true,
            "processing": true,
            searchDelay: 900,
            "ajax": {
                url: "@Url.Action("CustomServerSideSearchActionAsync", "AjaxDataTable")",
                type: "POST",
                //async: false,
                data: function (data) {
                    if (primerCarga) {
                        primerCarga = false;

                        data.search.value = sessionStorage.searchTexts;

                    };

                    sessionStorage.searchText == undefined ? sessionStorage.searchText = "" : null;
                    data.filtrosExtras = [];
                    $.each(filtroInicial, function (index,item) {
                        data.filtrosExtras.push(item);
                    })

                    data.tablaVista = '@Model.tablaModel.TablaVista';

                    data.columns.pop()
                },
                dataSrc: function (json) {

                    $.each(json.data, function (index, item) {
                        botonextra = `<a class='mr-1 btn btn-success d-inline fas fa-eye BotonCheck' style="color:white" id="${item.IdPostulantePersona}" data-toggle="tooltip" data-placement="top" title="Detalles"></a>`
                        botonDetalle = `<a class='mr-1 btn btn-info fas fa-bars load-submit' href='/Postulante?ID_Postulante=${item.IdPostulantePersona}'  data-toggle='tooltip' data-placement='top' title='Detalles'></a>`;

                        item.Opciones = `<div class="d-flex justify-content-around">${botonextra}|${botonDetalle}</div>`
                    });
                    return json.data;
                }
            },
            dom: '<"container row justify-content-center m-0"<"col-md-6 col-sm-12"lB><"col-md-6 col-sm-12"f><"container  row mt-1">>r<"col-sm-12"t><"container row  d-flex"<"col-md-6 col-sm-12"i><"col-md-6 col-sm-12"p>>',
             buttons: [
                 {
                     extend: 'copyHtml5',
                     text: 'Copiar' ,
                     exportOptions: {

                         columns: ':not(.noPrint)'
                     },
                     title: 'Id Convocatoria: @Model.idConvocatoria - @Html.Raw(Model.infoConvocatoria.Modalidad): detalles de Inscriptos',
                     action: newexportaction

                 },
                 {
                     extend: 'excelHtml5',
                     exportOptions: {
                         columns: ':not(.noPrint)'
                     },
                     title: 'Id Convocatoria: @Model.idConvocatoria - @Html.Raw(Model.infoConvocatoria.Modalidad): detalles de Inscriptos',
                     action: newexportaction

                 },
                 {
                     extend: 'pdfHtml5',
                     exportOptions: {
                         columns: ':not(.noPrint)'
                     },
                     orientation: 'landscape',
                     title: 'Id Convocatoria: @Model.idConvocatoria - @Html.Raw(Model.infoConvocatoria.Modalidad): detalles de Inscriptos',
                     action: newexportaction

                 },
                 {
                     extend: 'print',
                     text: 'Imprimir',
                     exportOptions: {

                         columns: ':not(.noPrint)'
                     },
                     title: 'Id Convocatoria: @Model.idConvocatoria - @Html.Raw(Model.infoConvocatoria.Modalidad): detalles de Inscriptos',
                     action: newexportaction

                 },
             ],
            "language":
            {
                "sProcessing": "<span class='fa-stack fa-lg'>\n\<i class='fa fa-spinner fa-spin fa-stack-2x fa-fw'></i>\n\</span>&nbsp;&nbsp;&nbsp;&nbsp;Cargando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "columns": columns,
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
            responsive: true,

        }).on('processing.dt', function (e, settings, processing) {
            if (processing) {
                $(".dataTables_wrapper").addClass("disabled");
            } else {
                $(".dataTables_wrapper").removeClass("disabled");
            }

        });

        $("div.dataTables_filter input").unbind();
        $("div.dataTables_filter input").keyup(function (e) {
            input_filter_value = this.value;
            clearTimeout(input_filter_timeout);
            input_filter_timeout = setTimeout(function () {
                table.search(input_filter_value).draw();
            }, table.context[0].searchDelay);

        });

        //establesco parametro de busqueda para al almacenamineto en el lado del cliente
        table.on('search.dt', function () {
            sessionStorage.searchText = table.search();
        });

        $(document).ready(function () {

            if (sessionStorage.getItem("searchText") != undefined) {
                table.search(sessionStorage.getItem("searchText")).draw();
            };

            $("tbody").on("click", ".BotonCheck", function () {
                id = $(this).attr("id");
                $.get("/CallConsulta/CheckPostulante", { idPostulante: id }, function (response) {
                    $("#idinscripcion").html(response.check.IdInscripcion);
                    $("#nombre").html(response.check.Nombres);
                    $("#apellido").html(response.check.Apellido);
                    $("#genero").html(response.check.Genero);
                    $("#altura").html(response.check.Altura != null ? `${response.check.Altura} - <b>${response.check.AlturaCheck}</b>` : "<b>Altura sin cargar</b>");
                    $("#imc").html(response.check.IMC != null ? `${response.check.IMC} - <b>${response.check.IMCCheck}</b>` : "<b>IMC sin cargar</b>");
                    $("#edad").html(`${response.check.Edad} - <b>${response.check.EdadCheck}</b>`);
                    $("#estadocivil").html(`${response.check.EstadoCivil} - <b>${response.check.EstadoCiviCheck}</b>`);
                    $("#detallePostulante").attr("href", `/Postulante?ID_Postulante=${id}`);
                })
                $("#MCheck").modal("show");
            });

            $("#detallePostulante").on("click", function () {
                $("#MCheck").modal("hide");
                $.Cargando();
            });
        })
    </script>
}