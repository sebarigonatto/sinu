@model IEnumerable<SINU.Models.vConsultaInscripciones>
@{
    ViewBag.Title = "Inscriptos Por Delegacion: " + ViewBag.delegacionSeleccionada;
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.CantReg = Model.Count();
    ViewBag.Title2 = "Total de Inscriptos: " + ViewBag.CantReg;
}


<h2 class="font-weight-bold ">
    @ViewBag.Title
</h2>

<div class="alert alert-dark text-right text-secondary" role="alert" style="background-color: #346691!important; color:white !important ;"> Total de  @ViewBag.Title2</div>

@*<h2 class="font-weight-bold text-warning">
        @ViewBag.Title2
    </h2>*@

<div>
    <!-- en esta linea estoy llamando al Index de ConsultaProgramadas
        con el id de la consulta que deseo se encuentre activa
        cuando arme el menú lateral de consultas-->
    @Html.ActionLink("Atras", "Index", "CallConsulta", new { id = ViewBag.ActivarId }, new { @class = "btn btn-primary w-80  btn-dark" })

</div>

<table class="table table-filters table-bordered table-light table-hover " id="le-filters" style="width:100%">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Apellido)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nombres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
                <label>Correo</label>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genero)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Etapa)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Email)*@
                <label>Detalle</label>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Apellido)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombres)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genero)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Etapa)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td> @Html.ActionLink(" ", "VerPostulanteElegido", new { IdPostulantePersona = item.IdPersona }, new { @class = "fas fa-bars", @style = "color:#343a40" }) </td>

                @*<td>
                            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>*@
            </tr>
        }
    </tbody>
</table>


<!-- ***********************************************************************-->
<!-- COPIAR TODO ESTE SCRIPT DE DATATABLE PARA TODAS LAS TABLAS DEL SISTEMA-->
<!-- ***********************************************************************-->
<!--Para establecer Formato de Tabla-->
<!-- Establecer la tabla  <table class="table table-filters" id="le-filters">-->
<!-- Agregar en las columnas que no deseo ordenar  <th class="no-sort"> -->
<!-- Agregar en las columnas que no deseo ordenar ni buscar  <th class="ni-o-ni-bu"> -->
<!-- Rodear la tr de las th con <thead> </thead>-->
<!-- Rodear el contenido de la tabla con <tbody>-->
@section Scripts {
    <script type="text/javascript">
        //scrip que permite buscar por cualquier campo en la tabla para su uso requiere que tabla tenga la propiedad id=myTable
        $(document).ready(function () {
            $(".table-filters").DataTable({
                responsive: true,
                "language":
                {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },

                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false
                },
                {
                    "targets": 'ni-o-ni-bu',
                    "searchable": false,
                    "orderable": false
          }],
                 "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]]

            });
        })
    </script>
    }
